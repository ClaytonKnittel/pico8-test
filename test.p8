pico-8 cartridge // http://www.pico-8.com
version 43
__lua__
music(0, -1)

LEFT = 0
RIGHT = 1
UP = 2
DOWN = 3
BTN_Z = 4
BTN_X = 5

TYPE_PLAYER = "player"
TYPE_LASER = "laser"
TYPE_ENEMY = "enemy"

ANIMATION_FREQ = 8

JUMP_DY = 7
DX = 1
FLOOR_Y = 12 * 8
G = 1

time = 0

TERM_PLAYING = 0
TERM_TERMINATING = 1

TERM_CLIP_SPEED = 4

termination_state = {
  state = TERM_PLAYING
}

function termination_state:start()
  self.state = TERM_TERMINATING
  self.start_time = time
  self.initial_width = 2 * max(
    player.position.x, 128 - player.position.x,
    player.position.y, 128 - player.position.y
  )
end

function termination_state:update()
  if (self.state == TERM_PLAYING) return
  if time - self.start_time > self.initial_width / TERM_CLIP_SPEED then
    extcmd("shutdown")
  end
end

function termination_state:draw()
  if (self.state == TERM_PLAYING) return
  local dt = time - self.start_time
  local width = self.initial_width - dt * TERM_CLIP_SPEED
  local height = self.initial_width - dt * TERM_CLIP_SPEED
  clip(
    player.position.x - width / 2,
    player.position.y - height / 2,
    width,
    height
  )
end

function distance(pos1, pos2)
  return sqrt((pos1.x - pos2.x) ^ 2 + (pos1.y - pos2.y) ^ 2)
end

function MakePosition(x, y)
  local position = {
    x = x,
    y = y,
    dx = 0,
    dy = 0
  }

  function position:update()
    self.x += self.dx
    self.dy += G
    self.y += self.dy

    if self.y >= FLOOR_Y then
      self.y = FLOOR_Y
      self.dy = 0
    end
  end

  return position
end

PLAYER_IDLE = 0
PLAYER_DYING = 1

function AttachPlayerActions(player)
  player.type = TYPE_PLAYER
  player.sprite = 16
  player.state = PLAYER_IDLE

  function player:jump(jump_dy)
    if (self.state == PLAYER_DYING) return
    if (self.position.y >= FLOOR_Y) self.position.dy = -jump_dy
  end

  function player:update()
    if (self.state == PLAYER_DYING) return
    if btn(LEFT) then
      self.position.dx = -DX
      self.direction = -1
    elseif btn(RIGHT) then
      self.position.dx = DX
      self.direction = 1
    else
      self.position.dx = 0
    end

    if (btnp(BTN_Z)) self:jump(JUMP_DY)
    if btnp(BTN_X) then
      sfx(4, 1)
      entities:spawn(AttachLaserActions(BuildEntity(self.position.x, self.position.y), self.direction))
    end
    self.position:update()
  end

  function player:draw_index()
    if (self.state == PLAYER_IDLE) then
      return self.sprite + flr(time / ANIMATION_FREQ) % 2
    else
      return self.sprite + 2 + min(flr(4 * (time - self.start_time) / ANIMATION_FREQ), 5)
    end
  end

  function player:hit()
    if (self.state == PLAYER_DYING) return
    self.state = PLAYER_DYING
    self.start_time = time
    music(3, -1)
    termination_state:start()
  end

  return player
end

LASER_MOVING = 0
LASER_EXPLODING = 1

function AttachLaserActions(laser, direction)
  laser.type = TYPE_LASER
  laser.sprite = 48
  laser.direction = direction
  laser.state = LASER_MOVING

  function laser:update()
    if self.state == LASER_MOVING then
      self.position.x += 4 * self.direction

      for enemy in entities:enemies() do
        if distance(self.position, enemy.position) <= 8 and enemy.state ~= ENEMY_DYING then
          self.state = LASER_EXPLODING
          self.explosion_idx = 0
          enemy:hit()
        end
      end
    else
      self.explosion_idx = self.explosion_idx + 1
    end
  end

  function laser:draw_index()
    if self.state == LASER_MOVING then
      return self.sprite + flr(time) % 2
    else
      return self.sprite + 2 + self.explosion_idx
    end
  end

  function laser:should_despawn()
    if self.state == LASER_MOVING then
      return self.position.x < -5 or self.position.x > 133
    else
      return self.explosion_idx >= 3
    end
  end

  return laser
end

ENEMY_IDLE = 0
ENEMY_HUNGRY = 1
ENEMY_DYING = 2

ENEMY_DX = 0.05

ENEMY_HP = 2
ENEMY_DEATH_TIME = ANIMATION_FREQ * 3

function AttachEnemyActions(enemy)
  enemy.type = TYPE_ENEMY
  enemy.sprite = 32
  enemy.state = ENEMY_IDLE
  enemy.hp = ENEMY_HP

  function enemy:update()
    if self.state ~= ENEMY_DYING then
      if distance(self.position, player.position) <= 32 then
        if self.state ~= ENEMY_HUNGRY then
          self.state = ENEMY_HUNGRY
          self.start_time = time
        end

        if distance(self.position, player.position) <= 8 then
          self.position.dx = 0
          player:hit()
        end
      else
        self.state = ENEMY_IDLE
        self.start_time = nil
      end

      if self.position.x > player.position.x then
        enemy.direction = -1
        self.position.dx = max(self.position.dx - ENEMY_DX, -1)
      else
        enemy.direction = 1
        self.position.dx = min(self.position.dx + ENEMY_DX, 1)
      end
    end

    self.position:update()
  end

  function enemy:draw_index()
    if self.state == ENEMY_IDLE then
      return self.sprite + flr(time / ANIMATION_FREQ) % 2
    elseif self.state == ENEMY_HUNGRY then
      local idx = flr(2 * (time - self.start_time) / ANIMATION_FREQ)
      return self.sprite + 2 + min(idx % 4, 4 - idx % 4)
    else
      local idx = flr(2 * (time - self.start_time) / ANIMATION_FREQ)
      return self.sprite + 5 + min(idx, 2)
    end
  end

  function enemy:should_despawn()
    return self.state == ENEMY_DYING and time - self.start_time >= ENEMY_DEATH_TIME
  end

  function enemy:hit()
    if (self.hp == 0) return
    self.hp = self.hp - 1

    if self.hp == 0 then
      self.state = ENEMY_DYING
      self.start_time = time
      self.position.dx = 0
    end
  end

  return enemy
end

function BuildEntity(x, y)
  local entity = {
    position = MakePosition(x, y),
    direction = 1
  }

  function entity:flip_x()
    return self.direction > 0
  end
  function entity:flip_y()
    return false
  end
  function entity:should_despawn()
    return false
  end

  function entity:draw()
    spr(self:draw_index(), self.position.x, self.position.y, 1, 1, self:flip_x(), self:flip_y())
  end

  return entity
end

function MakeEntities()
  entities = {}

  function entities:spawn(entity)
    self[#self + 1] = entity
  end

  function entities:update()
    to_delete = {}
    for i, entity in ipairs(self) do
      entity:update()
      if (entity:should_despawn()) to_delete[#to_delete + 1] = i
    end

    for idx = #to_delete, 1, -1 do
      local i = to_delete[idx]
      self[i], self[#self] = self[#self], self[i]
      self[#self] = nil
    end
  end

  function entities:enemies()
    local idx = 1
    return function()
      while idx <= #self do
        local result = self[idx]
        idx += 1
        if result.type == TYPE_ENEMY then
          return result
        end
      end
    end
  end

  return entities
end

player = AttachPlayerActions(BuildEntity(7 * 8, 12 * 8))
entities = MakeEntities()
entities:spawn(AttachEnemyActions(BuildEntity(15 * 8, 12 * 8)))

ENEMY_SPAWN_PERIOD = 60

function ContinuousSpawnEnemies()
  if (time % ENEMY_SPAWN_PERIOD ~= 0 or player.state == PLAYER_DYING) return
  local x = rnd { -8, 17 * 8 }
  local y = 12 * 8
  entities:spawn(AttachEnemyActions(BuildEntity(x, y)))
end

function UpdateEntities()
  ContinuousSpawnEnemies()
  player:update()
  entities:update()
end

function _update()
  UpdateEntities()
  termination_state:update()
  time += 1
end

function _draw()
  cls(0)
  termination_state:draw()

  map(0, 0, 0, 0, 16, 16, 0)

  player:draw()
  for i, entity in ipairs(entities) do
    entity:draw()
  end
end

__gfx__
0000000000000000bbbbbbbb44444444444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000b4b4bb4b44444444444404404440444000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000000000044b44b4444444444040400404400404000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000004444444444444444000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000004444444444444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000004444444444444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004444444444444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004444444444444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000ff000000ff00000ff00000ff80000008080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000ff000000ff000000880000ff080000ff800000808000000000000000000000000000000000000000000000000000000000000000000000000000000000000
085555800855558008555580000880000ff880000880000008000000000000000000000000000000000000000000000000000000000000000000000000000000
0885588008855880088558800855558000000000ff80000080080000000000000000000000000000000000000000000000000000000000000000000000000000
0066660000066000006666000885588000855580ff00000088000000880000000000000000000000000000000000000000000000000000000000000000000000
0aa00aa000aaaa000aa00aa0006666000085558000855580ff855580ff8855800000000000000000000000000000000000000000000000000000000000000000
0aa00aa000aaaa000aa00aa00aa00aa00aa66aa00aa66aa0ffa66aa0ffa66aa00000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000007202000000722000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0002200000022000220220000072a20000002a200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0022220000222200702a220000002220000722200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22a11a2222a11a2200701a2207071a2270701a220002200000000000000000000000000000000000000000000000000000000000000000000000000000000000
01111110011111100111111001111110111111100022220000000000000000000000000000000000000000000000000000000000000000000000000000000000
001001000010010000100100001001000010010022a11a2200022000000220000000000000000000000000000000000000000000000000000000000000000000
0c000c0000c00c0000c00c000c000c0000c00c000111111000222200002222000000000000000000000000000000000000000000000000000000000000000000
01000010001001000010010001000010001001000010010022a11a22220110220000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000a08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000008000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000a00000a0000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000800000800a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08a8a8a00a8a8a80000a000000008000080000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000a000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000a080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404050404050504050404050405050400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010a00003b04000000000000000020040000000000000000000000000000000000002704000000000000000026040000001604000000000000000000000000001604000000000000000000000000000000000000
010a000000002000020000200002000020000200002000020c6550000200002000020000200002000020000200000000000c6060c6250c655000000c655000000c60500000000000c6050c655000000000000000
010a000003060030000000000000000000000007060070600a0600000000000000000c06000000000000000000000000000f000000000f0600f0600e0600e0600007000070000000000000070000700000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010500003e04332033260231a0330e053020730000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010700000f0500f05500005000050e0500e05500005000050c0500c05500005000050005000050000500005000050000500005000050000550000500005000050000500000000000000000000000000000000000
010700001b1201b12500105001051a1201a1250010500105181201812500105001050c1200c1200c1200c1200c1200c1200c1200c1200c1250010500105001050010000100001000010000100001000010000100
010700000c655000000c6050c6250c65500000000000c6250c655000000c6250c6250c65500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010700001412014125001000010013120131250010000100111201112500100001000f1200f1200f1200f1200f1200f1200f1200f1200f1250010000100001000010000100001000010000100001000010000100
__music__
00 00014344
00 00014344
03 00010244
00 08090a0b

